<Window x:Class="zxeltor.StoCombat.Realtime.Controls.MetricsOverlayWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:classes="clr-namespace:zxeltor.StoCombat.Realtime.Classes"
        mc:Ignorable="d"
        Title="MetricsOverlayWindow" Topmost="True" ShowInTaskbar="False"
        d:DataContext="{d:DesignInstance Type={x:Type classes:MetricsOverlayWindowContext}}"
        d:Background="Transparent" Top="{Binding Path=OverlayWindowTop, Mode=TwoWay}" 
        Left="{Binding Path=OverlayWindowLeft, Mode=TwoWay}" 
        BorderThickness="0" SizeToContent="WidthAndHeight" Background="Transparent">
    <Window.Resources>
        <ResourceDictionary Source="/Styles/StoCombatResourceDictionary.xaml"></ResourceDictionary>
    </Window.Resources>
    <Grid Background="{Binding Path=BackgroundColorBrush, Converter={StaticResource solidColorBrushToBrushConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="4,0,0,0">
            <!--<TextBlock Text="Event(s): " 
                       Foreground="{Binding HeaderTextColorBrush, Converter={StaticResource solidColorBrushToBrushConverter}}"></TextBlock>
            <TextBlock Text="{Binding Path=CurrentRealtimeCombat.EventsCount}" 
                       Foreground="{Binding TextColorBrush, ConverterParameter={StaticResource solidColorBrushToBrushConverter}}"></TextBlock>-->
            <TextBlock Text="Started: " Margin="0,0,0,0" 
                       Foreground="{Binding HeaderTextColorBrush, Converter={StaticResource solidColorBrushToBrushConverter}}"></TextBlock>
            <TextBlock Text="{Binding Path=CurrentRealtimeCombat.CombatStart, Converter={StaticResource dateTimeToHoursMinutesSecondsMilliSecondsConverter}}" 
                       Foreground="{Binding TextColorBrush, ConverterParameter={StaticResource solidColorBrushToBrushConverter}}"></TextBlock>
            <TextBlock Text="Duration: " Margin="16,0,0,0" 
                       Foreground="{Binding HeaderTextColorBrush, Converter={StaticResource solidColorBrushToBrushConverter}}"></TextBlock>
            <TextBlock Text="{Binding Path=CurrentRealtimeCombat.CombatDuration, Converter={StaticResource combatTimeSpanToShortStringConverter}}" 
                       Foreground="{Binding TextColorBrush, ConverterParameter={StaticResource solidColorBrushToBrushConverter}}"></TextBlock>
        </StackPanel>
        <FrameworkElement Name="frameworkElement" Grid.Row="1" Visibility="Collapsed"></FrameworkElement>
        <DataGrid Name="uiDataGrid" Grid.Row="1" Margin="0,2,0,0"
                  ItemsSource="{Binding Path=CurrentRealtimeCombat.PlayerEntitiesOrderByName}" CanUserAddRows="False" 
                  IsReadOnly="True" CanUserDeleteRows="False" Background="Transparent" BorderThickness="0" CanUserResizeRows="False" 
                  CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" AutoGenerateColumns="False" 
                  IsHitTestVisible="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                  GridLinesVisibility="None"> 
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Style.Setters>
                        <Setter Property="Background" Value="Transparent"></Setter>
                        <Setter Property="BorderThickness" Value="0"></Setter>
                        <Setter Property="IsHitTestVisible" Value="False"></Setter>
                        <Setter Property="Margin" Value="4,4,4,4"></Setter>
                    </Style.Setters>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.RowHeaderStyle>
                <Style TargetType="DataGridRowHeader">
                    <Style.Setters>
                        <Setter Property="Background" Value="Transparent"></Setter>
                        <Setter Property="BorderThickness" Value="0"></Setter>
                        <Setter Property="IsHitTestVisible" Value="False"></Setter>
                    </Style.Setters>
                </Style>
            </DataGrid.RowHeaderStyle>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Setters>
                        <Setter Property="Background" Value="Transparent"></Setter>
                        <Setter Property="BorderThickness" Value="0"></Setter>
                        <Setter Property="IsHitTestVisible" Value="False"></Setter>
                    </Style.Setters>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsInCombat}" Value="True">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.TextColorBrush, Converter={StaticResource solidColorBrushToBrushConverter}}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsInCombat}" Value="False">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.OutOfCombatTextColorBrush, Converter={StaticResource solidColorBrushToBrushConverter}}"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Setters>
                        <Setter Property="Margin" Value="2,0,2,0"></Setter>
                    </Style.Setters>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>

                <DataGridTemplateColumn IsReadOnly="True">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Name" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.HeaderTextColorBrush}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=OwnerDisplay, Mode=OneWay}" Style="{StaticResource metricGridTextBox}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True" Visibility="{Binding Source={x:Reference frameworkElement}, Path=DataContext.DisplayDamage, Converter={StaticResource typeToVisibilityConverter}}">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Damage" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.HeaderTextColorBrush}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=EntityTotalMagnitude, Mode=OneWay, Converter={StaticResource doubleToThousandsStringConverter}}" Style="{StaticResource metricGridTextBox}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True" Visibility="{Binding Source={x:Reference frameworkElement}, Path=DataContext.DisplayMaxDamage, Converter={StaticResource typeToVisibilityConverter}}">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="MaxDamage" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.HeaderTextColorBrush}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=EntityMaxMagnitude, Mode=OneWay, Converter={StaticResource doubleToThousandsStringConverter}}" Style="{StaticResource metricGridTextBox}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True"  Visibility="{Binding Source={x:Reference frameworkElement}, Path=DataContext.DisplayDps, Converter={StaticResource typeToVisibilityConverter}}">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="DPS" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.HeaderTextColorBrush}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=EntityMagnitudePerSecond, Mode=OneWay, Converter={StaticResource doubleToThousandsStringConverter}}" Style="{StaticResource metricGridTextBox}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True" Visibility="{Binding Source={x:Reference frameworkElement}, Path=DataContext.DisplayAttacks, Converter={StaticResource typeToVisibilityConverter}}">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Attacks" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.HeaderTextColorBrush}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock HorizontalAlignment="Center" Text="{Binding Path=EntityCombatAttacks, Mode=OneWay}" Style="{StaticResource metricGridTextBox}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True" Visibility="{Binding Source={x:Reference frameworkElement}, Path=DataContext.DisplayKills, Converter={StaticResource typeToVisibilityConverter}}">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Kills" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.HeaderTextColorBrush}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock HorizontalAlignment="Center" Text="{Binding Path=EntityCombatKills, Mode=OneWay}" Style="{StaticResource metricGridTextBox}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True" Visibility="{Binding Source={x:Reference frameworkElement}, Path=DataContext.DisplayStart, Converter={StaticResource typeToVisibilityConverter}}">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Start" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.HeaderTextColorBrush}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=EntityCombatStart, Mode=OneWay, Converter={StaticResource dateTimeToHoursMinutesSecondsMilliSecondsConverter}}" Style="{StaticResource metricGridTextBox}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True" Visibility="{Binding Source={x:Reference frameworkElement}, Path=DataContext.DisplayEnd, Converter={StaticResource typeToVisibilityConverter}}">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="End" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.HeaderTextColorBrush}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=EntityCombatEnd, Mode=OneWay, Converter={StaticResource dateTimeToHoursMinutesSecondsMilliSecondsConverter}}" Style="{StaticResource metricGridTextBox}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True" Visibility="{Binding Source={x:Reference frameworkElement}, Path=DataContext.DisplayDuration, Converter={StaticResource typeToVisibilityConverter}}">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Duration" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.HeaderTextColorBrush}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=EntityCombatDuration, Mode=OneWay, Converter={StaticResource combatTimeSpanToShortStringConverter}}" Style="{StaticResource metricGridTextBox}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True"  Visibility="{Binding Source={x:Reference frameworkElement}, Path=DataContext.DisplayInActive, Converter={StaticResource typeToVisibilityConverter}}">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="InActive" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.HeaderTextColorBrush}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=EntityCombatInActive, Mode=OneWay, Converter={StaticResource combatTimeSpanToShortStringConverter}}" Style="{StaticResource metricGridTextBox}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
