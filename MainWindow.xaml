<Window x:Class="zxeltor.StoCombat.Realtime.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:zxeltor.StoCombat.Realtime.Controls"
        xmlns:properties="clr-namespace:zxeltor.StoCombat.Realtime.Properties"
        xmlns:classes="clr-namespace:zxeltor.StoCombat.Realtime.Classes"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type={x:Type classes:RealtimeCombatLogMonitor}}"
        Title="MainWindow" MinHeight="300" MinWidth="440" Height="700" Width="700" d:DesignHeight="600" Name="uiMainWindow" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ResourceDictionary Source="Styles/StoCombatResourceDictionary.xaml"></ResourceDictionary>
    </Window.Resources>
    <Grid>
        <TabControl>
            <TabItem Header="Monitor">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Vertical" Margin="4,4,4,4" Grid.Row="0" HorizontalAlignment="Left">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            
                            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6">
                                <TextBlock Text="Running:" Margin="0,0,4,0" Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                                <TextBlock Text="{Binding Path=IsRunning}" TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                            </StackPanel>
                            
                            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6">
                                <TextBlock Text="Latest File:" Margin="0,0,4,0" Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                                <TextBlock Text="{Binding Path=LatestFileName}" TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"
                                           Visibility="{Binding Path=IsTestMode, Converter={StaticResource typeToVisibilityConverterInverted}}"></TextBlock>
                                <TextBlock Text="Test Mode" Visibility="{Binding Path=IsTestMode, Converter={StaticResource typeToVisibilityConverter}}"></TextBlock>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6"
                                        Visibility="{Binding Path=IsTestMode, Converter={StaticResource typeToVisibilityConverterInverted}}">
                                <TextBlock Text="File Last Updated:" Margin="0,0,4,0" Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                                <TextBlock Text="{Binding Path=LatestFileUpdated, Converter={StaticResource dateTimeToExtendedDateStringConverter}}" 
                                           TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6"
                                        Visibility="{Binding Path=IsTestMode, Converter={StaticResource typeToVisibilityConverter}}">
                                <TextBlock Text="Last Test Elapsed:" Margin="0,0,4,0" Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                                <TextBlock Text="{Binding Path=LastTestElapsedTime}" 
                                           TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                            </StackPanel>

                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Row="0" Margin="4,4,4,4">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            
                            <Button Name="uiButtonStart" HorizontalAlignment="Left" Margin="16,0,0,0" Padding="2,2,2,2" VerticalAlignment="Top" 
                                    Height="18" ToolTip="Start the real-time parser" Click="UiButtonStart_OnClick">
                                <Image Source="Images/glyphicons-174-play.png"></Image>
                            </Button>

                            <Button Name="uiButtonEnd" HorizontalAlignment="Left" Margin="8,0,0,0" Padding="2,2,2,2" VerticalAlignment="Top" 
                                    Height="18" ToolTip="Stop the real-time parser" Click="UiButtonEnd_OnClick">
                                <Image Source="Images/glyphicons-176-stop.png"></Image>
                            </Button>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,8,0,0">
                            <Button Name="uiButtonDisplayOverlay" Height="18" ToolTip="Show overlay"
                                    Click="UiButtonDisplayOverlay_OnClick">
                                <Image Source="Images/glyphicons-87-display.png"></Image>
                            </Button>

                            <Button Name="uiButtonRefreshCombat" Height="18" Margin="8,0,0,0" ToolTip="Clear combat grid"
                                    Click="UiButtonRefreshCombat_OnClick">
                                <Image Source="Images/glyphicons-82-refresh.png"></Image>
                            </Button>
                        </StackPanel>
                    </StackPanel>

                    <WrapPanel Orientation="Horizontal" Grid.Row="1" Margin="4,4,4,4"
                               Visibility="{Binding Source={x:Static classes:StoCombatRealtimeSettings.Instance}, Path=IsDisplayToolsTab, Converter={StaticResource typeToVisibilityConverter}}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Lines read: " Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                            <TextBlock Text="{Binding Path=LinesLastReadCount}" TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="8,0,0,0">
                            <TextBlock Text="Events added: " Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                            <TextBlock Text="{Binding Path=EventsLastAddCount}" TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="8,0,0,0">
                            <TextBlock Text="Parsing Errors: " Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                            <TextBlock Text="{Binding Path=ErrorsCountSinceNewCombat}" TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                        </StackPanel>
                    </WrapPanel>

                    <FrameworkElement Name="frameworkElementMetricsOverlayWindowContext" Grid.Row="2" Visibility="Collapsed"
                                      DataContext="{x:Static classes:StoCombatRealtimeSettings.Instance}"/>
                    
                    <GroupBox Grid.Row="2">
                        <GroupBox.Header>
                            <WrapPanel Orientation="Horizontal">
                                <TextBlock Text="Combat Grid:" Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                                <StackPanel Orientation="Horizontal" Margin="4,0,0,0"
                                            Visibility="{Binding Path=CurrentRealtimeCombat, Converter={StaticResource typeToVisibilityConverter}}">
                                    <TextBlock Text="Events=" Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                                    <TextBlock Text="{Binding Path=CurrentRealtimeCombat.EventsCount}" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="4,0,0,0"
                                            Visibility="{Binding Path=CurrentRealtimeCombat, Converter={StaticResource typeToVisibilityConverter}}">
                                    <TextBlock Text="Start=" Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                                    <TextBlock Text="{Binding Path=CurrentRealtimeCombat.CombatStart, Converter={StaticResource dateTimeToExtendedDateStringConverter}}"
                                               Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="4,0,0,0"
                                            Visibility="{Binding Path=CurrentRealtimeCombat, Converter={StaticResource typeToVisibilityConverter}}">
                                    <TextBlock Text="Duration=" Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                                    <TextBlock Text="{Binding Path=CurrentRealtimeCombat.CombatDuration, ConverterParameter={StaticResource timeSpanMinSeconds}}"
                                               Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                                </StackPanel>
                            </WrapPanel>
                        </GroupBox.Header>
                        <DataGrid Margin="2,2,2,2" CanUserAddRows="False" IsReadOnly="True" CanUserDeleteRows="False"
                                  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                                  ItemsSource="{Binding Path=CurrentRealtimeCombat.PlayerEntitiesOrderByName}"
                                  CanUserResizeRows="False" CanUserReorderColumns="True" CanUserResizeColumns="True" 
                                  CanUserSortColumns="True" AutoGenerateColumns="False">
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsInCombat}" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource colorEventTypeMetricValue}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsInCombat}" Value="False">
                                            <Setter Property="Foreground" Value="{StaticResource colorRejectedReason}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Path=OwnerDisplay}" IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Name" />
                                        </StackPanel>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path=EntityTotalMagnitude, Converter={StaticResource doubleToThousandsStringConverter}}"
                            IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding Source={x:Reference frameworkElementMetricsOverlayWindowContext}, Path=DataContext.MetricsOverlayWindowContext.DisplayDamage, Mode=TwoWay}" 
                                                ToolTip="Display Damage in the overlay grid" VerticalAlignment="Center" />
                                            <TextBlock Text="Damage" Margin="2,0,0,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path=EntityMaxMagnitude, Converter={StaticResource doubleToThousandsStringConverter}}"
                            IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding Source={x:Reference frameworkElementMetricsOverlayWindowContext}, Path=DataContext.MetricsOverlayWindowContext.DisplayMaxDamage, Mode=TwoWay}" 
                                                      ToolTip="Display MaxDamage in the overlay grid"    VerticalAlignment="Center" />
                                            <TextBlock Text="Max Damage" Margin="2,0,0,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path=EntityMagnitudePerSecond, Converter={StaticResource doubleToThousandsStringConverter}}"
                            IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding Source={x:Reference frameworkElementMetricsOverlayWindowContext}, Path=DataContext.MetricsOverlayWindowContext.DisplayDps, Mode=TwoWay}" 
                                                      ToolTip="Display DPS in the overlay grid"    VerticalAlignment="Center" />
                                            <TextBlock Text="DPS" Margin="2,0,0,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path=EntityCombatAttacks}"
                            IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding Source={x:Reference frameworkElementMetricsOverlayWindowContext}, Path=DataContext.MetricsOverlayWindowContext.DisplayAttacks, Mode=TwoWay}" 
                                                      ToolTip="Display Attacks in the overlay grid" VerticalAlignment="Center" />
                                            <TextBlock Text="Attacks" Margin="2,0,0,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path=EntityCombatKills}"
                            IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding Source={x:Reference frameworkElementMetricsOverlayWindowContext}, Path=DataContext.MetricsOverlayWindowContext.DisplayKills, Mode=TwoWay}" 
                                                      ToolTip="Display Kills in the overlay grid" VerticalAlignment="Center" />
                                            <TextBlock Text="Kills" Margin="2,0,0,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path=EntityCombatStart, Converter={StaticResource dateTimeToHoursMinutesSecondsMilliSecondsConverter}}"
                            IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding Source={x:Reference frameworkElementMetricsOverlayWindowContext}, Path=DataContext.MetricsOverlayWindowContext.DisplayStart, Mode=TwoWay}" 
                                                      ToolTip="Display StarTime in the overlay grid" VerticalAlignment="Center" />
                                            <TextBlock Text="Start" Margin="2,0,0,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path=EntityCombatEnd, Converter={StaticResource dateTimeToHoursMinutesSecondsMilliSecondsConverter}}"
                            IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding Source={x:Reference frameworkElementMetricsOverlayWindowContext}, Path=DataContext.MetricsOverlayWindowContext.DisplayEnd, Mode=TwoWay}" 
                                                      ToolTip="Display EndTime in the overlay grid" VerticalAlignment="Center" />
                                            <TextBlock Text="End" Margin="2,0,0,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path=EntityCombatDuration, Converter={StaticResource combatTimeSpanToShortStringConverter}}"
                            IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding Source={x:Reference frameworkElementMetricsOverlayWindowContext}, 
                                                Path=DataContext.MetricsOverlayWindowContext.DisplayDuration, Mode=TwoWay}" 
                                                      ToolTip="Display Duration in the overlay grid" VerticalAlignment="Center" />
                                            <TextBlock Text="Duration" Margin="2,0,0,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path=EntityCombatInActive, Converter={StaticResource combatTimeSpanToShortStringConverter}}"
                            IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding Source={x:Reference frameworkElementMetricsOverlayWindowContext}, 
                                                Path=DataContext.MetricsOverlayWindowContext.DisplayInActive, Mode=TwoWay}" 
                                                      ToolTip="Display InActiveTime in the overlay grid" VerticalAlignment="Center" />
                                            <TextBlock Text="InActive" Margin="2,0,0,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                </Grid>
            </TabItem>
            
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Notifications"></TextBlock>
                        <Image Margin="4,0,0,0" Height="14" 
                               Visibility="{Binding ElementName=uiLogControl, Path=MyContext.HighestResultLevel, Converter={StaticResource typeToVisibilityConverter}}"
                               Source="{Binding ElementName=uiLogControl, Path=MyContext.HighestResultLevel, Converter={StaticResource resultLevelImageSourceConverter}}">
                        </Image>
                        <TextBlock Text="{Binding ElementName=uiLogControl, Path=MyContext.LogGridRows.Count}" Margin="4,0,0,0"
                                   Visibility="{Binding ElementName=uiLogControl, Path=MyContext.HighestResultLevel, Converter={StaticResource typeToVisibilityConverter}}"></TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <controls:LogControl x:Name="uiLogControl" Grid.Row="1"></controls:LogControl>
                </Grid>
            </TabItem>

            <TabItem Header="Settings">
                <controls:SettingsControl></controls:SettingsControl>
            </TabItem>

            <TabItem Header="Tools" Visibility="{Binding Source={x:Static classes:StoCombatRealtimeSettings.Instance}, Path=IsDisplayToolsTab, Converter={StaticResource typeToVisibilityConverter}}">
                <controls:TestControl></controls:TestControl>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
